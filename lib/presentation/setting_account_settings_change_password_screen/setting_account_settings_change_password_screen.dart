import 'package:social_app/widgets/app_bar/custom_app_bar.dart';import 'package:social_app/widgets/app_bar/appbar_leading_image.dart';import 'package:social_app/widgets/custom_text_form_field.dart';import 'package:social_app/core/utils/validation_functions.dart';import 'package:social_app/widgets/custom_elevated_button.dart';import 'package:flutter/material.dart';import 'package:social_app/core/app_export.dart';import 'controller/setting_account_settings_change_password_controller.dart';
// ignore_for_file: must_be_immutable
class SettingAccountSettingsChangePasswordScreen extends GetWidget<SettingAccountSettingsChangePasswordController> {SettingAccountSettingsChangePasswordScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: SizedBox(width: SizeUtils.width, child: SingleChildScrollView(padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom), child: Form(key: _formKey, child: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(vertical: 16.v), child: Column(children: [_buildIcon(), Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Container(height: 424.v, width: 359.h, margin: EdgeInsets.only(left: 16.h), child: Stack(alignment: Alignment.topLeft, children: [CustomImageView(imagePath: ImageConstant.imgAccent47, height: 252.v, width: 154.h, alignment: Alignment.topRight), Align(alignment: Alignment.topLeft, child: Container(width: 270.h, margin: EdgeInsets.only(top: 104.v), child: Text("msg_please_enter_a".tr, maxLines: 2, overflow: TextOverflow.ellipsis, style: theme.textTheme.titleSmall))), _buildFrame()])), SizedBox(height: 14.v), Padding(padding: EdgeInsets.only(left: 16.h), child: Row(children: [Padding(padding: EdgeInsets.only(top: 1.v), child: Text("msg_passwor_strength".tr, style: CustomTextStyles.titleSmallGray900)), Padding(padding: EdgeInsets.only(left: 10.h), child: Text("lbl_week".tr, style: CustomTextStyles.titleSmallPrimary))])), SizedBox(height: 9.v), Align(alignment: Alignment.center, child: Divider(color: appTheme.gray30001, indent: 16.h, endIndent: 16.h)), SizedBox(height: 19.v), Padding(padding: EdgeInsets.only(left: 16.h), child: Text("msg_password_must_contain".tr, style: CustomTextStyles.bodyMediumGray900)), SizedBox(height: 10.v), Padding(padding: EdgeInsets.only(left: 16.h), child: Row(children: [CustomImageView(imagePath: ImageConstant.imgCheckBlueGray300, height: 18.adaptSize, width: 18.adaptSize), Padding(padding: EdgeInsets.only(left: 6.h), child: Text("msg_at_least_6_characters".tr, style: theme.textTheme.titleSmall))])), SizedBox(height: 10.v), Padding(padding: EdgeInsets.only(left: 16.h), child: Row(children: [CustomImageView(imagePath: ImageConstant.imgCheckBlueGray300, height: 18.adaptSize, width: 18.adaptSize), Padding(padding: EdgeInsets.only(left: 6.h), child: Text("msg_at_least_one_uppercase".tr, style: theme.textTheme.titleSmall))])), SizedBox(height: 9.v), Padding(padding: EdgeInsets.only(left: 16.h), child: Row(children: [CustomImageView(imagePath: ImageConstant.imgCheckBlueGray300, height: 18.adaptSize, width: 18.adaptSize), Padding(padding: EdgeInsets.only(left: 6.h), child: Text("msg_at_least_one_number_0_9".tr, style: theme.textTheme.titleSmall))])), SizedBox(height: 5.v)])]))))), bottomNavigationBar: _buildSave())); } 
/// Section Widget
Widget _buildIcon() { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomAppBar(leadingWidth: double.maxFinite, leading: AppbarLeadingImage(imagePath: ImageConstant.imgIcon, margin: EdgeInsets.fromLTRB(21.h, 5.v, 340.h, 5.v), onTap: () {onTapIcon();})), SizedBox(height: 28.v), Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_change_password".tr, style: theme.textTheme.headlineSmall))]); } 
/// Section Widget
Widget _buildInputField() { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("msg_current_password".tr, style: theme.textTheme.titleSmall), SizedBox(height: 5.v), Obx(() => CustomTextFormField(controller: controller.passwordController, hintText: "msg_current_password".tr, hintStyle: CustomTextStyles.titleMediumBluegray300, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {controller.isShowPassword.value = !controller.isShowPassword.value;}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 14.v, 15.h, 14.v), child: CustomImageView(imagePath: ImageConstant.imgEyeoff, height: 24.adaptSize, width: 24.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 52.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: controller.isShowPassword.value, contentPadding: EdgeInsets.only(left: 15.h, top: 16.v, bottom: 16.v)))]); } 
/// Section Widget
Widget _buildInputField1() { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_new_password".tr, style: theme.textTheme.titleSmall), SizedBox(height: 5.v), Obx(() => CustomTextFormField(controller: controller.newpasswordController, hintText: "lbl_new_password".tr, hintStyle: CustomTextStyles.titleMediumBluegray300, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {controller.isShowPassword1.value = !controller.isShowPassword1.value;}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 14.v, 15.h, 14.v), child: CustomImageView(imagePath: ImageConstant.imgEyeoff, height: 24.adaptSize, width: 24.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 52.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: controller.isShowPassword1.value, contentPadding: EdgeInsets.only(left: 15.h, top: 16.v, bottom: 16.v)))]); } 
/// Section Widget
Widget _buildInputField2() { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("msg_re_type_new_password".tr, style: theme.textTheme.titleSmall), SizedBox(height: 5.v), Obx(() => CustomTextFormField(controller: controller.newpasswordController1, hintText: "msg_re_type_new_password".tr, hintStyle: CustomTextStyles.titleMediumBluegray300, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {controller.isShowPassword2.value = !controller.isShowPassword2.value;}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 14.v, 15.h, 14.v), child: CustomImageView(imagePath: ImageConstant.imgEyeoff, height: 24.adaptSize, width: 24.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 52.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: controller.isShowPassword2.value, contentPadding: EdgeInsets.only(left: 15.h, top: 16.v, bottom: 16.v)))]); } 
/// Section Widget
Widget _buildFrame() { return Align(alignment: Alignment.bottomLeft, child: Padding(padding: EdgeInsets.only(right: 16.h), child: Column(mainAxisSize: MainAxisSize.min, children: [_buildInputField(), SizedBox(height: 15.v), _buildInputField1(), SizedBox(height: 15.v), _buildInputField2()]))); } 
/// Section Widget
Widget _buildSave() { return CustomElevatedButton(text: "lbl_save".tr, margin: EdgeInsets.only(left: 16.h, right: 16.h, bottom: 54.v), onPressed: () {onTapSave();}); } 

/// Navigates to the previous screen.
onTapIcon() { Get.back(); } 
/// Navigates to the settingAccountSettingsScreen when the action is triggered.
onTapSave() { Get.toNamed(AppRoutes.settingAccountSettingsScreen, ); } 
 }
